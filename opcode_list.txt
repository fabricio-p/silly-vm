# The instruction set of the bytecode
nop
halt.vm
# Stack manipulation
duplicate.any
drop.any
# Constants
const.u32
const.s32
const.u64
const.s64
const.f32
const.f64
# Virtual registers
set.local
get.local
# Operations on 32 bit unsigned integers
add.u32
sub.u32
mul.u32
div.u32
rem.u32
lshift.u32
rshift.u32
# Operations on 32 bit signed integers
add.s32
sub.s32
mul.s32
div.s32
rem.s32
lshift.s32
rshift.s32
# Operations on 64 bit unsigned integers
add.u64
sub.u64
mul.u64
div.u64
rem.u64
lshift.u64
rshift.u64
# Operations on 64 bit signed integers
add.s64
sub.s64
mul.s64
div.s64
rem.s64
lshift.s64
rshift.s64
# Operations on 32 bit floating points
add.f32
sub.f32
mul.f32
div.f32
rem.f32
floor.f32
ceil.f32
# Operations on 64 bit floating points
add.f64
sub.f64
mul.f64
div.f64
rem.f64
floor.f64
ceil.f64
sqrt.f64
# Relational operators
#   32 bit integers
eq.i32
neq.i32
eqz.i32
#     unsigned
gt.u32
lt.u32
ge.u32
le.u32
#     signed
gt.s32
lt.s32
ge.s32
le.s32
#   64 bit integers
eq.i64
neq.i64
eqz.i64
#     unsigned
gt.u64
lt.u64
ge.u64
le.u64
#     signed
gt.s64
lt.s64
ge.s64
le.s64
#   32 bit floats
eq.f32
neq.f32
eqz.f32
gt.f32
lt.f32
ge.f32
le.f32
#   64 bit floats
eq.f64
neq.f64
eqz.f64
gt.f64
lt.f64
ge.f64
le.f64
